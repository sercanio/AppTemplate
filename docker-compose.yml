version: '3.8'

services:
  apptemplate-db:
    image: postgres:latest
    container_name: AppTemplate.Db
    environment:
      POSTGRES_DB: AppTemplateDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - apptemplate-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  apptemplate-redis:
    image: redis:latest
    container_name: AppTemplate.Redis
    command: redis-server --requirepass redis
    environment:
      REDIS_PASSWORD: redis
    volumes:
      - apptemplate-redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  apptemplate-web:
    image: ${DOCKER_REGISTRY-}apptemplate-web
    container_name: AppTemplate.Web
    build:
      context: .
      dockerfile: src/AppTemplate.Web/Dockerfile
    depends_on:
      apptemplate-db:
        condition: service_healthy
      apptemplate-redis:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:5070"
      ConnectionStrings__Database: "Host=apptemplate-db;Port=5432;Database=AppTemplateDb;Username=postgres;Password=postgres;"
      ConnectionStrings__Redis: "apptemplate-redis:6379,password=redis"
    ports:
      - "5070:5070"
    volumes:
      - ./usersecrets:/app/.microsoft/usersecrets:ro

  apptemplate-webui:
    image: ${DOCKER_REGISTRY-}apptemplate-webui
    container_name: AppTemplate.WebUI
    build:
      context: ./WebUI
      dockerfile: Dockerfile
    depends_on:
      - apptemplate-web
    environment:
      VITE_API_URL: "http://apptemplate-web:5070/api/v1"
    ports:
      - "3000:80"

volumes: 
  apptemplate-db-data:
  apptemplate-redis-data: